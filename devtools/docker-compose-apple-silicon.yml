services:
  mysql:
    image: mysql:8.2
    command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks: ['intern-network']
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - ${MYSQL_PORT}:3306
    restart:
      always
    volumes:
      - ./docker/mysql:/var/lib/mysql

  redis:
    image: redis
    networks: ['intern-network']
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - ./docker/redis:/data

  mongo:
    image: mongo:8.0.9
    networks: ['intern-network']
    ports:
      - ${MONGO_PORT}:27017
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}

  mongo-express:
    image: mongo-express:1.0.2-20-alpine3.19
    networks: ['intern-network']
    restart: always
    ports:
      - ${MONGO_EXPRESS_PORT}:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}

  internsearch-node1: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
    image: opensearchproject/opensearch:latest
    container_name: internsearch-node1
    environment:
      - cluster.name=internsearch-cluster # Name the cluster
      - node.name=internsearch-node1 # Name the node that will run in this container
      - discovery.seed_hosts=internsearch-node1,internsearch-node2 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=internsearch-node1,internsearch-node2 # Nodes eligibile to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD} # Sets the demo admin user password when using demo configuration (for OpenSearch 2.12 and later)
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - ./docker/internsearch-data1:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
    ports:
      - ${OPENSEARCH_PORT}:9200 # REST API
      - ${OPENSEARCH_ANALYZER_PORT}:9600 # Performance Analyzer
    networks:
      - intern-network # All of the containers will join the same Docker bridge network
  internsearch-node2:
    image: opensearchproject/opensearch:latest # This should be the same image used for opensearch-node1 to avoid issues
    container_name: internsearch-node2
    environment:
      - cluster.name=internsearch-cluster
      - node.name=internsearch-node2
      - discovery.seed_hosts=internsearch-node1,internsearch-node2
      - cluster.initial_cluster_manager_nodes=internsearch-node1,internsearch-node2
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ./docker/internsearch-data2:/usr/share/opensearch/data
    networks:
      - intern-network
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest # Make sure the version of opensearch-dashboards matches the version of opensearch installed on other nodes
    container_name: internsearch-dashboards
    ports:
      - ${OPENSEARCH_DASHBOARD_PORT}:5601 # Map host port 5601 to container port 5601
    expose:
      - "5601" # Expose port 5601 for web access to OpenSearch Dashboards
    environment:
      OPENSEARCH_HOSTS: '["https://internsearch-node1:9200","https://internsearch-node2:9200"]' # Define the OpenSearch nodes that OpenSearch Dashboards will query
    networks:
      - intern-network

  dynamodb-local:
   command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
   image: "amazon/dynamodb-local:latest"
   networks: ['intern-network']
   container_name: dynamodb-local
   ports:
     - ${DYNAMODB_PORT}:8000
   volumes:
     - "./docker/dynamodb:/home/dynamodblocal/data"
   working_dir: /home/dynamodblocal

  rasa:
    build: ./rasa-apple-silicon
    networks: ['intern-network']
    ports:
    - ${RASA_PORT}:5005
    volumes:
    - "./rasa/credentials.yml:/app/credentials.yml"
    - "./docker/rasa/models:/app/models"
    - "./docker/rasa/logs:/app/logs"
    command: "run --enable-api --cors '*' --debug"

  builder:
    build: ./builder
    platform: linux/amd64
    networks: ['intern-network']
    restart: always
    environment:
      - BUILD_BACKEND_URL=${BUILD_BACKEND_URL}
      - BUILD_USERNAME=${BUILD_USERNAME}
      - BUILD_PASSWORD=${BUILD_PASSWORD}

networks: {intern-network: {}}
volumes:
  internsearch-data1:
  internsearch-data2:
