# Generated by Django 5.0.4 on 2025-10-03 12:58

import django.db.models.deletion
import django.utils.timezone
import uuid
import va.models.model
import va.models.response
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('config', models.JSONField(blank=True, null=True)),
                ('output_folder', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'va_bots',
            },
        ),
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('bot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='va.bot')),
            ],
            options={
                'db_table': 'va_actions',
            },
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('conversation', models.TextField(blank=True, null=True)),
                ('story', models.TextField(blank=True, null=True)),
                ('bot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='va.bot')),
            ],
            options={
                'db_table': 'va_conversations',
            },
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('slot_data_type', models.CharField(blank=True, choices=[('text', 'Text'), ('bool', 'Boolean'), ('categorical', 'Categorical'), ('float', 'Float'), ('list', 'List'), ('unfeaturized', 'Unfeaturized')], max_length=255, null=True)),
                ('bot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='entities', to='va.bot')),
            ],
            options={
                'db_table': 'va_entities',
            },
        ),
        migrations.CreateModel(
            name='Intent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('bot', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='intents', to='va.bot')),
            ],
            options={
                'db_table': 'va_intents',
            },
        ),
        migrations.CreateModel(
            name='Expression',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('text', models.CharField(blank=True, max_length=255)),
                ('intent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='expressions', to='va.intent')),
            ],
            options={
                'db_table': 'va_expressions',
            },
        ),
        migrations.CreateModel(
            name='NLUModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('hash', models.CharField(blank=True, max_length=64, null=True)),
                ('file', models.FileField(upload_to=va.models.model.nlu_model_upload_path)),
                ('bot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='models', to='va.bot')),
            ],
            options={
                'db_table': 'va__nlu_models',
            },
        ),
        migrations.CreateModel(
            name='Regex',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('pattern', models.CharField(blank=True, max_length=255, null=True)),
                ('bot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='regexs', to='va.bot')),
            ],
            options={
                'db_table': 'va_regexs',
            },
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('text', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, max_length=255, null=True, upload_to=va.models.response.bot_response_image_path)),
                ('custom', models.JSONField(blank=True, null=True)),
                ('bot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='va.bot')),
            ],
            options={
                'db_table': 'va_responses',
            },
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('conversation_start', models.BooleanField(blank=True, default=False)),
                ('wait_for_user_input', models.BooleanField(blank=True, default=True)),
                ('bot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='va.bot')),
            ],
            options={
                'db_table': 'va_rules',
            },
        ),
        migrations.CreateModel(
            name='RuleStep',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.IntegerField(blank=True, default=0, null=True)),
                ('type', models.CharField(blank=True, choices=[('intent', 'Intent'), ('response', 'Response'), ('action', 'Action'), ('event', 'Event'), ('checkpoint', 'Checkpoint')], max_length=80)),
                ('payload', models.JSONField(blank=True, null=True)),
                ('rule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='va.rule')),
            ],
            options={
                'db_table': 'va_rule_steps',
            },
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('bot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stories', to='va.bot')),
            ],
            options={
                'db_table': 'va_stories',
            },
        ),
        migrations.CreateModel(
            name='StoryStep',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.IntegerField(blank=True, default=0, null=True)),
                ('type', models.CharField(blank=True, choices=[('intent', 'Intent'), ('response', 'Response'), ('action', 'Action'), ('event', 'Event'), ('checkpoint', 'Checkpoint')], max_length=80)),
                ('payload', models.JSONField(blank=True, null=True)),
                ('story', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='va.story')),
            ],
            options={
                'db_table': 'va_story_steps',
            },
        ),
        migrations.CreateModel(
            name='Synonym',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reference', models.CharField(blank=True, max_length=255)),
                ('bot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='synonyms', to='va.bot')),
            ],
            options={
                'db_table': 'va_synonyms',
            },
        ),
        migrations.CreateModel(
            name='SynonymVariant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('value', models.CharField(blank=True, max_length=255)),
                ('synonym', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='va.synonym')),
            ],
            options={
                'db_table': 'va_synonym_variants',
            },
        ),
        migrations.CreateModel(
            name='Utterance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('text', models.CharField(blank=True, max_length=255)),
                ('bot', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='utterances', to='va.bot')),
                ('intent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='utterances', to='va.intent')),
            ],
            options={
                'db_table': 'va_utterances',
            },
        ),
        migrations.CreateModel(
            name='UtteranceEntity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('text', models.CharField(blank=True, max_length=255, null=True)),
                ('start', models.IntegerField(default=0)),
                ('end', models.IntegerField(default=0)),
                ('style', models.CharField(blank=True, max_length=256, null=True)),
                ('entity', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='utterance_entities', to='va.entity')),
                ('utterance', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='utterance_entities', to='va.utterance')),
            ],
            options={
                'db_table': 'va_intents_utterance_entities',
            },
        ),
        migrations.AddField(
            model_name='utterance',
            name='entities',
            field=models.ManyToManyField(blank=True, null=True, related_name='utterances', through='va.UtteranceEntity', to='va.entity'),
        ),
    ]
